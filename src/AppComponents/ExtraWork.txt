import "./News.css";
import React, { Component } from "react";
import NewsItems from "./NewsItems";
import Spinner from "./Spinner";
import PropTypes from "prop-types";
// import InfiniteScroll from "react-infinite-scroll-component";

export class News extends Component {
  static defaultProps = {
    country: "in",
    category: "general",
    pageSize: 15,
    heading: "News Web",
  };
  static propTypes = {
    country: PropTypes.string,
    category: PropTypes.string,
    pageSize: PropTypes.number,
    heading: PropTypes.string,
  };

  capitalizeFirstLetter = (string) => {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };

  articles = [];
  totalResults = "";
  constructor(props) {
    super(props);
    this.state = {
      articles: this.articles,
      loading: false,
      page: 1,
      totalArticles: this.totalResults,
    };
    document.title = `News Hub - ${this.capitalizeFirstLetter(
      this.props.category
    )}`;
  }

  async updateNews() {
    
    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a751b0560b6f44499cb75c55c24a1b18&page=${this.state.page}&pageSize=${this.props.pageSize}`;
    this.setState({ loading: true });
    // if (this.state.loading) {
    //   return <Spinner />;
    // }
    let data = await fetch(url);
    let parsedData = await data.json();
    this.setState({
      articles: parsedData.articles,
      totalArticles: parsedData.totalResults,
      loading: false,
    });
  
  }
  async componentDidMount() {
    this.updateNews();
  }

  handlePrevClick = async() => {
      await this.setState({page: this.state.page - 1});
      this.updateNews();
  }

  handleNextClick = async() => {
    await this.setState({page: this.state.page + 1});
      this.updateNews();
  }

  // fetchMoreData = async () => {
  //   this.setState({ page: this.state.page + 1 });
  //   this.setState({ loading: true });
  //   let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=a751b0560b6f44499cb75c55c24a1b18&page=${this.state.page}&pageSize=${this.props.pageSize}`;
  //   if (this.state.loading) {
  //     return <Spinner />;
  //   }
  //   let data = await fetch(url);
  //   let parsedData = await data.json();
  //   this.setState({
  //     articles: this.state.articles.concat(parsedData.articles),
  //     totalArticles: parsedData.totalResults,
  //     loading: false,
  //   });
  // };
  render() {
    return (
      <>
        <div className="container">
          <h2 className="text-center" style={{ margin: "30px" }}>
            <strong>NewsWeb- Top {this.props.heading} Headlines</strong>
          </h2>
          {this.state.loading && <Spinner />}
          {/* <InfiniteScroll
            dataLength={this.state.articles.length}
            next={this.fetchMoreData}
            hasMore={this.state.articles.length !== this.state.totalArticles}
            loader={<Spinner />}> */}

          <div className="row">
            {!this.state.loading && this.state.articles.map((element) => {
              return (
                <div className="col-md-4 my-3" key={element.url}>
                   
                  <NewsItems
                    title={element.title ? element.title : "Title Undefined"}
                    description={element.description ? element.description.slice(0, 76) : "Want to see full story, click on Read more..."}
                    imageUrl={element.urlToImage}
                    newsUrl={element.url}
                    author={element.author}
                    date={element.publishedAt}
                    source={element.source.name}
                  />
                </div>
              );
            })}
          </div>
          <div className="d-flex justify-content-between">
          <button disabled= {this.state.page <= 1}type="button" className="btn btn-dark" onClick={this.handlePrevClick}>&larr; Prev</button>
          <button disabled= {this.state.page + 1 >Math.ceil(this.state.totalArticles/this.props.pageSize) } type="button" className="btn btn-dark" onClick={this.handleNextClick}>Next &rarr;</button>
          </div>

          {/* </InfiniteScroll> */}
        </div>
      </>
    );
  }
}
export default News;
